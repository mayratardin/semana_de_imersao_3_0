{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mayta\\\\Documents\\\\MeusProjetos\\\\semana_de_imersao_3_0\\\\site\\\\components\\\\Menu.js\";\nimport React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText, Button } from 'reactstrap';\n\nconst Menu = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    children: \"A\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Menu;","map":{"version":3,"sources":["C:/Users/mayta/Documents/MeusProjetos/semana_de_imersao_3_0/site/components/Menu.js"],"names":["React","useState","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","NavbarText","Button","Menu","props","isOpen","setIsOpen","toggle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,GALJ,EAMIC,OANJ,EAOIC,OAPJ,EAQIC,oBARJ,EASIC,cATJ,EAUIC,YAVJ,EAWIC,YAXJ,EAYIC,UAZJ,EAaIC,MAbJ,QAcS,YAdT;;AAgBE,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBjB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMkB,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AAEA,sBACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOC,CAZH;;AAcE,eAAeF,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText,\r\n    Button\r\n  } from 'reactstrap';\r\n\r\n  const Menu = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n  \r\n    const toggle = () => setIsOpen(!isOpen);\r\n  \r\n    return (\r\n        <Button>\r\n            A\r\n        </Button>\r\n\r\n\r\n        );\r\n    }\r\n    \r\n    export default Menu;\r\n"]},"metadata":{},"sourceType":"module"}