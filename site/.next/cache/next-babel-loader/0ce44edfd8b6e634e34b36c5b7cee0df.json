{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mayta\\\\Documents\\\\MeusProjetos\\\\semana_de_imersao_3_0\\\\site\\\\pages\\\\contato.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Head from 'next/head'; //importando o cabeçalho\n\nimport Menu from '../components/Menu'; //importando o Menu para usar como componente\n\nimport Rodape from '../components/Rodape'; //importando o componente Rodape\n\nimport { Button, Container, Form, FormGroup, Input, Jumbotron, Label } from 'reactstrap'; //importando o componente\n\nfunction Home() {\n  //'setando' valores\n  const {\n    0: contato,\n    1: setContato\n  } = useState({\n    name: '',\n    email: '',\n    subject: '',\n    content: ''\n  }); //quando o usuário clicar nos campos do usuário\n\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }); //submetendo o formulário\n\n  const sendMsg = async e => {\n    e.preventDefault(); //para não recarregar a página\n\n    setResponse({\n      formSave: true\n    }); //quando começar a salvar\n\n    try {\n      const res = await fetch('http://localhost:8080/contato', {\n        method: 'POST',\n        body: JSON.stringify(contato),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const responseEnv = await res.json(); //lendo o retorno do envio\n\n      if (responseEnv.error) {\n        setResponse({\n          //'setando' os valores recebidos\n          formSave: false,\n          type: 'error',\n          message: responseEnv.message //pegando a msg da api\n\n        });\n      } else {\n        setResponse({\n          //'setando' os valores recebidos\n          formSave: false,\n          type: 'success',\n          message: responseEnv.message //pegando a msg da api\n\n        });\n      }\n    } catch (err) {\n      setResponse({\n        //'setando' os valores recebidos\n        formSave: false,\n        type: 'error',\n        message: 'ERRO: Mensagem não enviada com sucesso, tente mais tarde!'\n      });\n    }\n  }; //sempre que o usuário realizar alguma alteração em um input, executará a função que 'seta' valores como objeto, pegando o que o contato já possui(por isso os ...), após pega o nome do campo e o valor dele\n\n\n  const onChangeInput = e => setContato(_objectSpread(_objectSpread({}, contato), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  return (\n    /*#__PURE__*/\n    //todo conteúdo deve estar dentro de uma tag\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Contato - Mayra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"description\",\n          content: \"Contato com a empresa ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"author\",\n          content: \"Mayra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n        fluid: true,\n        className: \"descr-top\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"style\", {\n          children: `.descr-top{\n                        background-color: #000;\n                        color: #fed136;\n                        padding-top: 100px;\n                        padding-bottom: 50;\n                        margin-bottom: 0rem !important;\n                    }`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"text-center\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"display-4\",\n            children: \"Contato\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n        fluid: true,\n        className: \"form-contato\",\n        children: [/*#__PURE__*/_jsxDEV(\"style\", {\n          children: `.form-contato{\n                        padding-top: 80px;\n                        padding-bottom: 80px;\n                        background-color: #fff;\n                        margin-bottom: 0rem !important;\n                    }`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [response.type === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 46\n          }, this) : \"\", response.type === 'success' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success\",\n            children: response.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 48\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: sendMsg,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"name\",\n                children: \"Nome:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"name\",\n                id: \"name\",\n                placeholder: \"Nome completo\",\n                onChange: onChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"email\",\n                children: \"E-mail:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                id: \"email\",\n                placeholder: \"Melhor e-mail\",\n                onChange: onChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"subject\",\n                children: \"Assunto:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"subject\",\n                id: \"subject\",\n                placeholder: \"Assunto da mensagem\",\n                onChange: onChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"content\",\n                children: \"Conte\\xFAdo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"textarea\",\n                name: \"content\",\n                id: \"content\",\n                placeholder: \"Conte\\xFAdo da mensagem\",\n                onChange: onChangeInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), response, /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              outline: true,\n              color: \"warning\",\n              children: \"Enviar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Rodape, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["C:/Users/mayta/Documents/MeusProjetos/semana_de_imersao_3_0/site/pages/contato.js"],"names":["React","useState","Head","Menu","Rodape","Button","Container","Form","FormGroup","Input","Jumbotron","Label","Home","contato","setContato","name","email","subject","content","response","setResponse","formSave","type","message","sendMsg","e","preventDefault","res","fetch","method","body","JSON","stringify","headers","responseEnv","json","error","err","onChangeInput","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Head from 'next/head'; //importando o cabeçalho\r\nimport Menu from '../components/Menu'; //importando o Menu para usar como componente\r\nimport Rodape from '../components/Rodape'; //importando o componente Rodape\r\nimport { Button, Container, Form, FormGroup, Input, Jumbotron, Label } from 'reactstrap'; //importando o componente\r\n\r\nfunction Home() {\r\n\r\n    //'setando' valores\r\n    const [contato, setContato] = useState({\r\n        name:'',\r\n        email: '',\r\n        subject: '',\r\n        content: ''\r\n    });\r\n\r\n    //quando o usuário clicar nos campos do usuário\r\n    const [response, setResponse] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    //submetendo o formulário\r\n    const sendMsg = async e => {\r\n        e.preventDefault(); //para não recarregar a página\r\n\r\n        setResponse({formSave: true}); //quando começar a salvar\r\n\r\n        try {\r\n            const res = await fetch('http://localhost:8080/contato', {\r\n                method: 'POST',\r\n                body: JSON.stringify(contato),\r\n                headers: { 'Content-Type': 'application/json'}\r\n            });\r\n\r\n            const responseEnv = await res.json(); //lendo o retorno do envio\r\n            if(responseEnv.error){\r\n                setResponse({ //'setando' os valores recebidos\r\n                    formSave: false,\r\n                    type: 'error',\r\n                    message: responseEnv.message //pegando a msg da api\r\n                });\r\n            }else{\r\n                setResponse({ //'setando' os valores recebidos\r\n                    formSave: false,\r\n                    type: 'success',\r\n                    message: responseEnv.message //pegando a msg da api\r\n                });\r\n            }\r\n        } catch (err){\r\n            setResponse({ //'setando' os valores recebidos\r\n                    formSave: false,\r\n                    type: 'error',\r\n                    message: 'ERRO: Mensagem não enviada com sucesso, tente mais tarde!'\r\n                });\r\n        }\r\n    }\r\n\r\n    //sempre que o usuário realizar alguma alteração em um input, executará a função que 'seta' valores como objeto, pegando o que o contato já possui(por isso os ...), após pega o nome do campo e o valor dele\r\n    const onChangeInput = e => setContato({ ...contato, [e.target.name]: e.target.value});\r\n\r\n    return (\r\n        //todo conteúdo deve estar dentro de uma tag\r\n        <> \r\n            <Head>\r\n                <title>Contato - Mayra</title>\r\n                <meta name=\"description\" content=\"Contato com a empresa ...\"/> {/* ajuda o site a ser localizado nos sites de buscas, por isso usa-se o next, quando se quer uma página otimizada para os buscadores */}\r\n                <meta name=\"author\" content=\"Mayra\"/>\r\n            </Head>\r\n\r\n            <Menu></Menu>\r\n\r\n            <Jumbotron fluid className=\"descr-top\"> {/* usado para criar uma área para o conteúdo, e inserido um seletor para que possa estilizar */}\r\n                <style>\r\n                    {`.descr-top{\r\n                        background-color: #000;\r\n                        color: #fed136;\r\n                        padding-top: 100px;\r\n                        padding-bottom: 50;\r\n                        margin-bottom: 0rem !important;\r\n                    }`}\r\n                </style>\r\n                <Container className=\"text-center\"> {/* usado para alinhar o conteúdo independente do tamanho da tela, e essa classe para centralizar */}\r\n                    <h1 className=\"display-4\">Contato</h1> {/* usando a classe para estilizar a fonte */}\r\n                </Container>\r\n            </Jumbotron>\r\n\r\n            <Jumbotron fluid className=\"form-contato\">\r\n                <style>\r\n                    {`.form-contato{\r\n                        padding-top: 80px;\r\n                        padding-bottom: 80px;\r\n                        background-color: #fff;\r\n                        margin-bottom: 0rem !important;\r\n                    }`}\r\n                </style>\r\n                <Container>\r\n                {response.type === 'error' ? <div className='alert alert-danger'>{response.message}</div>: \"\"}\r\n                {response.type === 'success' ? <div className='alert alert-success'>{response.message}</div>: \"\"}\r\n                    <Form onSubmit={sendMsg}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Nome:</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Nome completo\" onChange={onChangeInput}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"email\">E-mail:</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Melhor e-mail\" onChange={onChangeInput}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"subject\">Assunto:</Label>\r\n                            <Input type=\"text\" name=\"subject\" id=\"subject\" placeholder=\"Assunto da mensagem\" onChange={onChangeInput}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"content\">Conteúdo:</Label>\r\n                            <Input type=\"textarea\" name=\"content\" id=\"content\" placeholder=\"Conteúdo da mensagem\" onChange={onChangeInput}/>\r\n                        </FormGroup>\r\n\r\n                        {response}\r\n                        <Button type=\"submit\" outline color=\"warning\">Enviar</Button>\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n            \r\n            <Rodape></Rodape>\r\n        </>\r\n    );\r\n  };\r\n  \r\n  export default Home;"]},"metadata":{},"sourceType":"module"}